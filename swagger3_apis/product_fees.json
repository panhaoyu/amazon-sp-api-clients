{
    "openapi": "3.0.1",
    "info": {
        "title": "Selling Partner API for Product Fees",
        "description": "The Selling Partner API for Product Fees lets you programmatically retrieve estimated fees for a product. You can then account for those fees in your pricing.",
        "contact": {
            "name": "Selling Partner API Developer Support",
            "url": "https://sellercentral.amazon.com/gp/mws/contactus.html"
        },
        "license": {
            "name": "Apache License 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0"
        },
        "version": "v0"
    },
    "servers": [
        {
            "url": "https://sellingpartnerapi-na.amazon.com/"
        }
    ],
    "paths": {
        "/products/fees/v0/listings/{SellerSKU}/feesEstimate": {
            "post": {
                "tags": [
                    "fees"
                ],
                "description": "Returns the estimated fees for the item indicated by the specified seller SKU in the marketplace specified in the request body.\n\nYou can call getMyFeesEstimateForSKU for an item on behalf of a seller before the seller sets the item's price. They can then take estimated fees into account. With each fees estimate request, you must include an original identifier. This identifier is included in the fees estimate so you can correlate a fees estimate with the original request.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 1 |\n\nFor more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.",
                "operationId": "getMyFeesEstimateForSKU",
                "parameters": [
                    {
                        "name": "SellerSKU",
                        "in": "path",
                        "description": "Used to identify an item in the given marketplace. SellerSKU is qualified by the seller's SellerId, which is included with every operation that you submit.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetMyFeesEstimateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        },
                        "x-amazon-spds-sandbox-behaviors": [
                            {
                                "request": {
                                    "parameters": {
                                        "body": {
                                            "value": {
                                                "FeesEstimateRequest": {
                                                    "MarketplaceId": "ATVPDKIKX0DER",
                                                    "IsAmazonFulfilled": false,
                                                    "PriceToEstimateFees": {
                                                        "ListingPrice": {
                                                            "CurrencyCode": "USD",
                                                            "Amount": 10
                                                        },
                                                        "Shipping": {
                                                            "CurrencyCode": "USD",
                                                            "Amount": 10
                                                        },
                                                        "Points": {
                                                            "PointsNumber": 0,
                                                            "PointsMonetaryValue": {
                                                                "CurrencyCode": "USD",
                                                                "Amount": 0
                                                            }
                                                        }
                                                    },
                                                    "Identifier": "UmaS1"
                                                }
                                            }
                                        }
                                    }
                                },
                                "response": {
                                    "payload": {
                                        "FeesEstimateResult": {
                                            "Status": "Success",
                                            "FeesEstimateIdentifier": {
                                                "MarketplaceId": "ATVPDKIKX0DER",
                                                "IdType": "ASIN",
                                                "SellerId": "A3TH9S8BH6GOGM",
                                                "SellerInputIdentifier": "UmaS1",
                                                "IsAmazonFulfilled": false,
                                                "IdValue": "B00V5DG6IQ",
                                                "PriceToEstimateFees": {
                                                    "ListingPrice": {
                                                        "CurrencyCode": "USD",
                                                        "Amount": 10
                                                    },
                                                    "Shipping": {
                                                        "CurrencyCode": "USD",
                                                        "Amount": 10
                                                    },
                                                    "Points": {
                                                        "PointsNumber": 0,
                                                        "PointsMonetaryValue": {
                                                            "CurrencyCode": "USD",
                                                            "Amount": 0
                                                        }
                                                    }
                                                }
                                            },
                                            "FeesEstimate": {
                                                "TimeOfFeesEstimation": "Mon Oct 28 18:49:32 UTC 2019",
                                                "TotalFeesEstimate": {
                                                    "CurrencyCode": "USD",
                                                    "Amount": 3.0
                                                },
                                                "FeeDetailList": []
                                            },
                                            "Error": {
                                                "Type": "",
                                                "Code": "",
                                                "Message": "",
                                                "Detail": []
                                            }
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        },
                        "x-amazon-spds-sandbox-behaviors": [
                            {
                                "request": {
                                    "parameters": {
                                        "body": {
                                            "value": {
                                                "FeesEstimateRequest": {
                                                    "MarketplaceId": "WRNGMRKTPLCE"
                                                }
                                            }
                                        }
                                    }
                                },
                                "response": {
                                    "errors": [
                                        {
                                            "code": "InvalidInput",
                                            "message": "Incorrect Marketplace identifier.",
                                            "details": ""
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/products/fees/v0/items/{Asin}/feesEstimate": {
            "post": {
                "tags": [
                    "fees"
                ],
                "description": "Returns the estimated fees for the item indicated by the specified Asin in the marketplace specified in the request body.\n\nYou can call getMyFeesEstimateForASIN for an item on behalf of a seller before the seller sets the item's price. They can then take estimated fees into account. With each product fees request, you must include an original identifier. This identifier is included in the fees estimate so you can correlate a fees estimate with the original request.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 1 | 1 |\n\nFor more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.",
                "operationId": "getMyFeesEstimateForASIN",
                "parameters": [
                    {
                        "name": "Asin",
                        "in": "path",
                        "description": "The Amazon Standard Identification Number (ASIN) of the item.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetMyFeesEstimateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        },
                        "x-amazon-spds-sandbox-behaviors": [
                            {
                                "request": {
                                    "parameters": {
                                        "body": {
                                            "value": {
                                                "FeesEstimateRequest": {
                                                    "MarketplaceId": "ATVPDKIKX0DER",
                                                    "IsAmazonFulfilled": false,
                                                    "PriceToEstimateFees": {
                                                        "ListingPrice": {
                                                            "CurrencyCode": "USD",
                                                            "Amount": 10
                                                        },
                                                        "Shipping": {
                                                            "CurrencyCode": "USD",
                                                            "Amount": 10
                                                        },
                                                        "Points": {
                                                            "PointsNumber": 0,
                                                            "PointsMonetaryValue": {
                                                                "CurrencyCode": "USD",
                                                                "Amount": 0
                                                            }
                                                        }
                                                    },
                                                    "Identifier": "UmaS1"
                                                }
                                            }
                                        }
                                    }
                                },
                                "response": {
                                    "payload": {
                                        "FeesEstimateResult": {
                                            "Status": "Success",
                                            "FeesEstimateIdentifier": {
                                                "MarketplaceId": "ATVPDKIKX0DER",
                                                "IdType": "ASIN",
                                                "SellerId": "A3TH9S8BH6GOGM",
                                                "SellerInputIdentifier": "UmaS1",
                                                "IsAmazonFulfilled": false,
                                                "IdValue": "B00V5DG6IQ",
                                                "PriceToEstimateFees": {
                                                    "ListingPrice": {
                                                        "CurrencyCode": "USD",
                                                        "Amount": 10
                                                    },
                                                    "Shipping": {
                                                        "CurrencyCode": "USD",
                                                        "Amount": 10
                                                    },
                                                    "Points": {
                                                        "PointsNumber": 0,
                                                        "PointsMonetaryValue": {
                                                            "CurrencyCode": "USD",
                                                            "Amount": 0
                                                        }
                                                    }
                                                }
                                            },
                                            "FeesEstimate": {
                                                "TimeOfFeesEstimation": "Mon Oct 28 18:49:32 UTC 2019",
                                                "TotalFeesEstimate": {
                                                    "CurrencyCode": "USD",
                                                    "Amount": 3.0
                                                },
                                                "FeeDetailList": []
                                            },
                                            "Error": {
                                                "Type": "",
                                                "Code": "",
                                                "Message": "",
                                                "Detail": []
                                            }
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        },
                        "x-amazon-spds-sandbox-behaviors": [
                            {
                                "request": {
                                    "parameters": {
                                        "body": {
                                            "value": {
                                                "FeesEstimateRequest": {
                                                    "MarketplaceId": "WRNGMRKTPLCE"
                                                }
                                            }
                                        }
                                    }
                                },
                                "response": {
                                    "errors": [
                                        {
                                            "code": "InvalidInput",
                                            "message": "Incorrect Marketplace identifier.",
                                            "details": ""
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetMyFeesEstimateResponse"
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        }
    },
    "components": {
        "schemas": {
            "GetMyFeesEstimateRequest": {
                "type": "object",
                "properties": {
                    "FeesEstimateRequest": {
                        "$ref": "#/components/schemas/FeesEstimateRequest"
                    }
                },
                "description": "Request schema."
            },
            "FeesEstimateRequest": {
                "required": [
                    "Identifier",
                    "MarketplaceId",
                    "PriceToEstimateFees"
                ],
                "type": "object",
                "properties": {
                    "MarketplaceId": {
                        "type": "string",
                        "description": "A marketplace identifier."
                    },
                    "IsAmazonFulfilled": {
                        "type": "boolean",
                        "description": "When true, the offer is fulfilled by Amazon."
                    },
                    "PriceToEstimateFees": {
                        "$ref": "#/components/schemas/PriceToEstimateFees"
                    },
                    "Identifier": {
                        "type": "string",
                        "description": "The product price on which the fee estimate is based."
                    }
                }
            },
            "GetMyFeesEstimateResponse": {
                "type": "object",
                "properties": {
                    "payload": {
                        "$ref": "#/components/schemas/GetMyFeesEstimateResult"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/ErrorList"
                    }
                }
            },
            "GetMyFeesEstimateResult": {
                "type": "object",
                "properties": {
                    "FeesEstimateResult": {
                        "$ref": "#/components/schemas/FeesEstimateResult"
                    }
                },
                "description": "Response schema."
            },
            "Points": {
                "type": "object",
                "properties": {
                    "PointsNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "PointsMonetaryValue": {
                        "$ref": "#/components/schemas/MoneyType"
                    }
                }
            },
            "ErrorList": {
                "type": "array",
                "description": "A list of error responses returned when a request is unsuccessful.",
                "items": {
                    "$ref": "#/components/schemas/Error"
                }
            },
            "Error": {
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "An error code that identifies the type of error that occurred."
                    },
                    "message": {
                        "type": "string",
                        "description": "A message that describes the error condition."
                    },
                    "details": {
                        "type": "string",
                        "description": "Additional information that can help the caller understand or fix the issue."
                    }
                }
            },
            "FeesEstimateResult": {
                "type": "object",
                "properties": {
                    "Status": {
                        "type": "string",
                        "description": "The status of the fee request. Possible values: Success, ClientError, ServiceError."
                    },
                    "FeesEstimateIdentifier": {
                        "$ref": "#/components/schemas/FeesEstimateIdentifier"
                    },
                    "FeesEstimate": {
                        "$ref": "#/components/schemas/FeesEstimate"
                    },
                    "Error": {
                        "$ref": "#/components/schemas/FeesEstimateError"
                    }
                },
                "description": "An item identifier and the estimated fees for the item."
            },
            "FeesEstimateIdentifier": {
                "type": "object",
                "properties": {
                    "MarketplaceId": {
                        "type": "string",
                        "description": "A marketplace identifier."
                    },
                    "SellerId": {
                        "type": "string",
                        "description": "The seller identifier."
                    },
                    "IdType": {
                        "type": "string",
                        "description": "The type of item identifier specified."
                    },
                    "IdValue": {
                        "type": "string",
                        "description": "The item identifier."
                    },
                    "IsAmazonFulfilled": {
                        "type": "boolean",
                        "description": "When true, the offer is fulfilled by Amazon."
                    },
                    "PriceToEstimateFees": {
                        "$ref": "#/components/schemas/PriceToEstimateFees"
                    },
                    "SellerInputIdentifier": {
                        "type": "string",
                        "description": "A unique identifier provided by the caller to track this request."
                    }
                },
                "description": "An item identifier, marketplace, time of request, and other details that identify an estimate."
            },
            "PriceToEstimateFees": {
                "required": [
                    "ListingPrice"
                ],
                "type": "object",
                "properties": {
                    "ListingPrice": {
                        "$ref": "#/components/schemas/MoneyType"
                    },
                    "Shipping": {
                        "$ref": "#/components/schemas/MoneyType"
                    },
                    "Points": {
                        "$ref": "#/components/schemas/Points"
                    }
                },
                "description": "Price information for an item, used to estimate fees."
            },
            "FeesEstimate": {
                "required": [
                    "TimeOfFeesEstimation"
                ],
                "type": "object",
                "properties": {
                    "TimeOfFeesEstimation": {
                        "type": "string",
                        "description": "The time for which the fees were estimated. This defaults to the time the request is made.",
                        "format": "date-time"
                    },
                    "TotalFeesEstimate": {
                        "$ref": "#/components/schemas/MoneyType"
                    },
                    "FeeDetailList": {
                        "$ref": "#/components/schemas/FeeDetailList"
                    }
                },
                "description": "The total estimated fees for an item and a list of details."
            },
            "FeeDetailList": {
                "type": "array",
                "description": "A list of other fees that contribute to a given fee.",
                "items": {
                    "$ref": "#/components/schemas/FeeDetail"
                }
            },
            "FeesEstimateError": {
                "required": [
                    "Code",
                    "Detail",
                    "Message",
                    "Type"
                ],
                "type": "object",
                "properties": {
                    "Type": {
                        "type": "string",
                        "description": "An error type, identifying either the receiver or the sender as the originator of the error."
                    },
                    "Code": {
                        "type": "string",
                        "description": "An error code that identifies the type of error that occurred."
                    },
                    "Message": {
                        "type": "string",
                        "description": "A message that describes the error condition in a human-readable form."
                    },
                    "Detail": {
                        "$ref": "#/components/schemas/FeesEstimateErrorDetail"
                    }
                },
                "description": "An unexpected error occurred during this operation."
            },
            "FeesEstimateErrorDetail": {
                "type": "array",
                "description": "Additional information that can help the caller understand or fix the issue.",
                "items": {
                    "type": "object",
                    "properties": {}
                }
            },
            "FeeDetail": {
                "required": [
                    "FeeAmount",
                    "FeeType",
                    "FinalFee"
                ],
                "type": "object",
                "properties": {
                    "FeeType": {
                        "type": "string",
                        "description": "The type of fee charged to a seller."
                    },
                    "FeeAmount": {
                        "$ref": "#/components/schemas/MoneyType"
                    },
                    "FeePromotion": {
                        "$ref": "#/components/schemas/MoneyType"
                    },
                    "TaxAmount": {
                        "$ref": "#/components/schemas/MoneyType"
                    },
                    "FinalFee": {
                        "$ref": "#/components/schemas/MoneyType"
                    },
                    "IncludedFeeDetailList": {
                        "$ref": "#/components/schemas/IncludedFeeDetailList"
                    }
                },
                "description": "The type of fee, fee amount, and other details."
            },
            "IncludedFeeDetailList": {
                "type": "array",
                "description": "A list of other fees that contribute to a given fee.",
                "items": {
                    "$ref": "#/components/schemas/IncludedFeeDetail"
                }
            },
            "IncludedFeeDetail": {
                "required": [
                    "FeeAmount",
                    "FeeType",
                    "FinalFee"
                ],
                "type": "object",
                "properties": {
                    "FeeType": {
                        "type": "string",
                        "description": "The type of fee charged to a seller."
                    },
                    "FeeAmount": {
                        "$ref": "#/components/schemas/MoneyType"
                    },
                    "FeePromotion": {
                        "$ref": "#/components/schemas/MoneyType"
                    },
                    "TaxAmount": {
                        "$ref": "#/components/schemas/MoneyType"
                    },
                    "FinalFee": {
                        "$ref": "#/components/schemas/MoneyType"
                    }
                },
                "description": "The type of fee, fee amount, and other details."
            },
            "MoneyType": {
                "type": "object",
                "properties": {
                    "CurrencyCode": {
                        "type": "string",
                        "description": "The currency code in ISO 4217 format."
                    },
                    "Amount": {
                        "type": "number",
                        "description": "The monetary value."
                    }
                }
            }
        }
    }
}